[
    {
        "id": "f5b31be2caac5832",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "990b7816eda3d196",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e8dcfebbb8b00468",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "4f0d9dee12b082af",
        "type": "tab",
        "label": "Flow 3",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "406cfd0025b8f887",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9eea9d665e03b9d2",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "eb387f80e0e16d7c",
        "type": "serial-port",
        "serialport": "/dev/ttyACM1",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "4aaca911daa10323",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "demo",
        "name": "demo",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "c8ede62fb887bca9",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "demo",
        "name": "db in",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "ca3aea2a98305532",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "603161e9ef8f92bb",
        "type": "ui_group",
        "name": "MAX30100",
        "tab": "ca3aea2a98305532",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6cd0b5265056aaaf",
        "type": "ui_group",
        "name": "DHT11",
        "tab": "ca3aea2a98305532",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "0d78a4b2f57395fa",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "494388a88753f531",
        "type": "influxdb",
        "hostname": "172.16.34.28",
        "port": "8086",
        "protocol": "http",
        "database": "DEMO",
        "name": "test",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "51eca4ba21daa48e",
        "type": "serial-port",
        "serialport": "/dev/ttyACM0",
        "serialbaud": "115200",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "waitfor": "",
        "dtr": "none",
        "rts": "none",
        "cts": "none",
        "dsr": "none",
        "newline": "\\n",
        "bin": "false",
        "out": "char",
        "addchar": "",
        "responsetimeout": "10000"
    },
    {
        "id": "1487af841b0c35da",
        "type": "mqtt-broker",
        "name": "",
        "broker": "root@172.16.34.28",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "0230497cf2cb3e5a",
        "type": "ui_group",
        "name": "Default",
        "tab": "fbd1dc4ee116dec2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "fbd1dc4ee116dec2",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1623832b5e84be0d",
        "type": "serial in",
        "z": "f5b31be2caac5832",
        "d": true,
        "name": "",
        "serial": "eb387f80e0e16d7c",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "ab1dd26175a0153a",
                "56bd111f30803513"
            ]
        ]
    },
    {
        "id": "ab1dd26175a0153a",
        "type": "switch",
        "z": "f5b31be2caac5832",
        "name": "Latitude",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "L",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 560,
        "y": 240,
        "wires": [
            [
                "202e03d4bd00fe3a",
                "6a3295095e23b9b5"
            ]
        ]
    },
    {
        "id": "56bd111f30803513",
        "type": "switch",
        "z": "f5b31be2caac5832",
        "name": "Longitude",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "l",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 540,
        "y": 620,
        "wires": [
            [
                "a7764883e4a84ac1",
                "c50d1eac6adb18cc"
            ]
        ]
    },
    {
        "id": "202e03d4bd00fe3a",
        "type": "debug",
        "z": "f5b31be2caac5832",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 540,
        "y": 180,
        "wires": []
    },
    {
        "id": "a7764883e4a84ac1",
        "type": "debug",
        "z": "f5b31be2caac5832",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 560,
        "y": 540,
        "wires": []
    },
    {
        "id": "6a3295095e23b9b5",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "parseL",
        "func": "var a=msg.payload\na=a.replace('L', '');\nmsg.payload=a;\nmsg.topic=\"latitude\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 200,
        "wires": [
            [
                "9d43ca17e837d258",
                "5cd1d916d38451ec"
            ]
        ]
    },
    {
        "id": "9d43ca17e837d258",
        "type": "debug",
        "z": "f5b31be2caac5832",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 880,
        "y": 260,
        "wires": []
    },
    {
        "id": "c50d1eac6adb18cc",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "parsel",
        "func": "var b=msg.payload\nb=b.replace('l', '');\nmsg.payload=b;\nmsg.topic=\"longitude\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 460,
        "wires": [
            [
                "0f3c9db22244cfc0",
                "5cd1d916d38451ec"
            ]
        ]
    },
    {
        "id": "0f3c9db22244cfc0",
        "type": "debug",
        "z": "f5b31be2caac5832",
        "d": true,
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 920,
        "y": 540,
        "wires": []
    },
    {
        "id": "5cd1d916d38451ec",
        "type": "join",
        "z": "f5b31be2caac5832",
        "name": "db",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "4",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1130,
        "y": 340,
        "wires": [
            [
                "13534fa697b3b264",
                "7a746a5dfaad189d"
            ]
        ]
    },
    {
        "id": "13534fa697b3b264",
        "type": "debug",
        "z": "f5b31be2caac5832",
        "name": "hey",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 1210,
        "y": 220,
        "wires": []
    },
    {
        "id": "c38860c71d1c571e",
        "type": "influxdb in",
        "z": "f5b31be2caac5832",
        "influxdb": "c8ede62fb887bca9",
        "name": "dbin",
        "query": "SELECT * FROM \"demo1\" LIMIT 1",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 410,
        "y": 720,
        "wires": [
            [
                "7f59286d65532f86"
            ]
        ]
    },
    {
        "id": "ef36ec92b6b8fe57",
        "type": "inject",
        "z": "f5b31be2caac5832",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 170,
        "y": 740,
        "wires": [
            [
                "c38860c71d1c571e"
            ]
        ]
    },
    {
        "id": "f13b583013bd912e",
        "type": "debug",
        "z": "f5b31be2caac5832",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 740,
        "wires": []
    },
    {
        "id": "94b249900937ecb1",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "latitude",
        "func": "msg.payload=\"L12.678657\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 380,
        "wires": [
            [
                "6a3295095e23b9b5"
            ]
        ]
    },
    {
        "id": "a76c8d56b6066372",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "longitude",
        "func": "msg.payload=\"l72.678657\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 440,
        "wires": [
            [
                "c50d1eac6adb18cc"
            ]
        ]
    },
    {
        "id": "cebf251ac6baca93",
        "type": "inject",
        "z": "f5b31be2caac5832",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "a76c8d56b6066372",
                "94b249900937ecb1",
                "5bf38b2650065297",
                "93a4deb9bfce14ce"
            ]
        ]
    },
    {
        "id": "7a746a5dfaad189d",
        "type": "influxdb out",
        "z": "f5b31be2caac5832",
        "influxdb": "c8ede62fb887bca9",
        "name": "demo1",
        "measurement": "demo1",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1310,
        "y": 380,
        "wires": []
    },
    {
        "id": "5bf38b2650065297",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "temp",
        "func": "msg.payload=\"32.67\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 60,
        "wires": [
            [
                "4bd00b9b4811534f"
            ]
        ]
    },
    {
        "id": "4bd00b9b4811534f",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "parseL",
        "func": "\nmsg.topic=\"temperature\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 60,
        "wires": [
            [
                "5cd1d916d38451ec"
            ]
        ]
    },
    {
        "id": "db394907eddf00b3",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "parseL",
        "func": "\nmsg.topic=\"Double_tap\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 120,
        "wires": [
            [
                "5cd1d916d38451ec"
            ]
        ]
    },
    {
        "id": "93a4deb9bfce14ce",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "double_tap",
        "func": "msg.payload=\"true\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 120,
        "wires": [
            [
                "db394907eddf00b3"
            ]
        ]
    },
    {
        "id": "7f59286d65532f86",
        "type": "function",
        "z": "f5b31be2caac5832",
        "name": "back4app",
        "func": "var arr = msg.payload;\n\nvar ti = arr[0][\"time\"];\nvar dt = arr[0][\"Double_tap\"];\nvar la = arr[0][\"latitude\"];\nvar lo = arr[0][\"longitude\"];\nvar te = arr[0][\"temperature\"];\n\nvar require = global.get('require');\nvar Parse = require('parse/node');\n//var string1=\"Parseget , \";\nParse.initialize(\"lS2PYdjIoUPVQbCZZg2thCgVZnnEMfABlu4Cmv3l\",\"CAYihhVCIWYbb5K0vRtgkuC5MFZw0DqbK8XWrmkQ\"); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\n//string1+=\"intialized , \"\nParse.serverURL = 'https://parseapi.back4app.com/'\n//string1+=\"parsed url\"\n\n\nasync function saveNewPerson() {\n  const person = new Parse.Object(\"Fall\");\n  //string1+=\"inside async function\";\n  \n  person.set(\"Time_stamp\", ti);\n  person.set(\"Latitude\", la);\n  person.set(\"Longitude\", lo);\n  if(la!=null && lo!=null){\n    person.set(\"fall\", true);  \n  }else{\n    person.set(\"fall\", false);\n  }\n  person.set(\"Temperature\", te);\n  if(te==null){\n      person.set(\"double_tap\",false);\n  }else{\n      person.set(\"double_tap\",true);\n  }\n   try {\n    const result = await person.save();\n    msg.payload=result;\n  } catch (error) {\n    msg.payload=\"failed\";\n  }\n  } \n  var obj= saveNewPerson();\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 740,
        "wires": [
            [
                "f13b583013bd912e"
            ]
        ]
    },
    {
        "id": "20a2362418044d7b",
        "type": "serial in",
        "z": "990b7816eda3d196",
        "name": "location and free fall",
        "serial": "eb387f80e0e16d7c",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "02be254219a6a139",
                "94e46f4fb08ca6bf"
            ]
        ]
    },
    {
        "id": "02be254219a6a139",
        "type": "function",
        "z": "990b7816eda3d196",
        "name": "",
        "func": "var latlong=msg.payload;\nif(latlong.startsWith('L'))\n{\n    msg.payload=latlong.substring(1,10);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 140,
        "wires": [
            [
                "428c4aa37ef99252"
            ]
        ]
    },
    {
        "id": "428c4aa37ef99252",
        "type": "debug",
        "z": "990b7816eda3d196",
        "name": "Latitude",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 910,
        "y": 140,
        "wires": []
    },
    {
        "id": "94e46f4fb08ca6bf",
        "type": "function",
        "z": "990b7816eda3d196",
        "name": "",
        "func": "var latlong=msg.payload;\nif(latlong.startsWith('L'))\n{\n    msg.payload=latlong.substring(11,20);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 240,
        "wires": [
            [
                "22a4fcf04c604164"
            ]
        ]
    },
    {
        "id": "22a4fcf04c604164",
        "type": "debug",
        "z": "990b7816eda3d196",
        "name": "Longitude",
        "active": true,
        "tosidebar": true,
        "console": true,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 910,
        "y": 240,
        "wires": []
    },
    {
        "id": "e93df4e4c42b17f3",
        "type": "influxdb out",
        "z": "9eea9d665e03b9d2",
        "influxdb": "494388a88753f531",
        "name": "db",
        "measurement": "random_number",
        "precision": "m",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 490,
        "y": 120,
        "wires": []
    },
    {
        "id": "0fc385e0e9622a71",
        "type": "inject",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "num",
        "x": 170,
        "y": 120,
        "wires": [
            [
                "f3bf7d3025519fce"
            ]
        ]
    },
    {
        "id": "f3bf7d3025519fce",
        "type": "random",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "low": 1,
        "high": "100",
        "inte": "true",
        "property": "payload",
        "x": 320,
        "y": 120,
        "wires": [
            [
                "e93df4e4c42b17f3",
                "2ac5e34e2ef5b8dc",
                "9df92278126ffba6"
            ]
        ]
    },
    {
        "id": "2ac5e34e2ef5b8dc",
        "type": "debug",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 200,
        "wires": []
    },
    {
        "id": "9df92278126ffba6",
        "type": "influxdb out",
        "z": "9eea9d665e03b9d2",
        "d": true,
        "influxdb": "494388a88753f531",
        "name": "db2",
        "measurement": "ranum",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 470,
        "y": 260,
        "wires": []
    },
    {
        "id": "5d0e8ea6116e5bb1",
        "type": "function",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "func": " \n\n\nvar require = global.get('require');\nvar Parse = require('parse/node');\nvar string1=\"Parseget , \";\nParse.initialize(\"lS2PYdjIoUPVQbCZZg2thCgVZnnEMfABlu4Cmv3l\",\"CAYihhVCIWYbb5K0vRtgkuC5MFZw0DqbK8XWrmkQ\"); //PASTE HERE YOUR Back4App APPLICATION ID AND YOUR JavaScript KEY\n//string1+=\"intialized , \"\nParse.serverURL = 'https://parseapi.back4app.com/'\n//string1+=\"parsed url\"\n\n\nasync function saveNewPerson() {\n  const person = new Parse.Object(\"Person\");\n  string1+=\"inside async function\"\n\n  person.set(\"name\", \"nirmal\");\n  person.set(\"age\", 27);\n  try {\n    let result = await person.save()\n   string1+=\"sucess\"\n    } catch(error) {\n        string1+=\"failed\"\n    }\n  } \n  var obj= saveNewPerson();\n msg.payload=string1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "197b36076b6ba196"
            ]
        ]
    },
    {
        "id": "c3fda4d8ef497676",
        "type": "inject",
        "z": "9eea9d665e03b9d2",
        "d": true,
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 190,
        "y": 380,
        "wires": [
            [
                "5d0e8ea6116e5bb1"
            ]
        ]
    },
    {
        "id": "197b36076b6ba196",
        "type": "debug",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": true,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "payload",
        "statusType": "auto",
        "x": 680,
        "y": 380,
        "wires": []
    },
    {
        "id": "8bd2772285191026",
        "type": "serial in",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "serial": "51eca4ba21daa48e",
        "x": 270,
        "y": 660,
        "wires": [
            [
                "51910b9b6728cb37",
                "374bd8e94633047b",
                "7c76628f29587d60"
            ]
        ]
    },
    {
        "id": "51910b9b6728cb37",
        "type": "debug",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 620,
        "wires": []
    },
    {
        "id": "374bd8e94633047b",
        "type": "function",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "func": "var Latitude;\n\n\nif(msg.payload === \"undefined\") {\n    msg.payload=\"00.000000\"\n}\nelse\n{\n    if(msg.payload.includes(\"L\"))\n    {\n    Latitude=msg.payload;\n    Latitude = Latitude.replace('L', '');\n    msg.payload=Latitude;\n    }\n\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 720,
        "wires": [
            [
                "d06046c8b721480c"
            ]
        ]
    },
    {
        "id": "d06046c8b721480c",
        "type": "debug",
        "z": "9eea9d665e03b9d2",
        "name": "Latitude",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 700,
        "wires": []
    },
    {
        "id": "da7bbe05ea0652a3",
        "type": "mqtt in",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "topic": "demo",
        "qos": "0",
        "datatype": "auto",
        "broker": "1487af841b0c35da",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "197b36076b6ba196",
                "8be05289a26fd05f",
                "7b3eacd98f5fbfc2"
            ]
        ]
    },
    {
        "id": "b193b6db23284b86",
        "type": "ui_gauge",
        "z": "9eea9d665e03b9d2",
        "name": "temp",
        "group": "0230497cf2cb3e5a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 850,
        "y": 440,
        "wires": []
    },
    {
        "id": "8be05289a26fd05f",
        "type": "function",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "func": "\nvar temp=msg.payload;\ntemp=temp.slice(3);\nmsg.payload=temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 460,
        "wires": [
            [
                "b193b6db23284b86",
                "6ef9f15923ab0d55"
            ]
        ]
    },
    {
        "id": "6ef9f15923ab0d55",
        "type": "debug",
        "z": "9eea9d665e03b9d2",
        "name": "temp",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 480,
        "wires": []
    },
    {
        "id": "4545fc371045d0d9",
        "type": "ui_toast",
        "z": "9eea9d665e03b9d2",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "msg.payload",
        "name": "",
        "x": 870,
        "y": 540,
        "wires": []
    },
    {
        "id": "7b3eacd98f5fbfc2",
        "type": "function",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "func": "\nvar temp=msg.payload;\nmsg.payload=\"Emergency\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 520,
        "wires": [
            [
                "4545fc371045d0d9"
            ]
        ]
    },
    {
        "id": "10f21cf228955313",
        "type": "ui_toast",
        "z": "9eea9d665e03b9d2",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "",
        "name": "",
        "x": 710,
        "y": 760,
        "wires": []
    },
    {
        "id": "7c76628f29587d60",
        "type": "function",
        "z": "9eea9d665e03b9d2",
        "name": "",
        "func": "\nmsg.payload=\"freefall\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 760,
        "wires": [
            [
                "10f21cf228955313"
            ]
        ]
    }
]